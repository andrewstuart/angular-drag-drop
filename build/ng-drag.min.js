angular.module("ngDrag",[]),angular.module("ngDrag").directive("ngDrag",["DragData","$timeout",function(a,b){"use strict";return{restrict:"A",link:function(c,d,e){d.attr("draggable","true"),e.dragEnd&&d.on("dragend",function(a){b(function(){c.$eval(e.ngDragend,{$event:a})})}),d.on("dragstart",function(d){var f=d.originalEvent||d;f.dataTransfer.getData("ngdrag/type")||(f.dataTransfer.setData("ngdrag/type",e.ngDrag||"ngdrag/id"),f.dataTransfer.setData(e.ngDrag||"ngdrag/id",c.$id)),a.add(c),e.ngDragstart&&b(function(){c.$eval(e.ngDragend,{$event:d})})})}}}]),angular.module("ngDrag").directive("ngDrop",["DragData",function(a){"use strict";return{restrict:"A",link:function(b,c,d){c.on("dragover",function(a){a.preventDefault(),d.ngDragover&&b.$apply(function(){b.$eval(d.ngDragover,{$event:a})})}),c.on("dragenter",function(a){a.preventDefault();var b=(a.originalEvent||a).dataTransfer.getData("ngdrag/type");b===d.allowDrop?event.dataTransfer.dropEffect="move":event.dataTransfer.dropEffect="none"}),c.on("drop",function(c){c.preventDefault();var e=(c.originalEvent||c).dataTransfer.getData(d.allowDrop||"ngdrag/id");if(e){var f=a.get(e);b.$apply(function(){b.$eval(d.ngDrop,{$from:f,$event:c})})}})}}}]),angular.module("ngDrag").service("DragData",function(){var a={};this.add=function(b){b.$id&&(a[b.$id]=b,b.$on("$destroy",function(){delete a[b.$id]}))},this.get=function(b){return a[b]?a[b]:void 0}});